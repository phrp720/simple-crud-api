// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Phillip Rafail Papadakis",
            "email": "filippospapadakis1@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/products": {
            "get": {
                "description": "Retrieve all products with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BaseProduct"
                            }
                        }
                    }
                }
            }
        },
        "/products/bulk/delete": {
            "delete": {
                "description": "Delete multiple products by IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete multiple products",
                "parameters": [
                    {
                        "description": "Product IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"products deleted successfully\"}"
                    }
                }
            }
        },
        "/products/create": {
            "post": {
                "description": "Create new products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create multiple products",
                "parameters": [
                    {
                        "description": "Products",
                        "name": "products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Products"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Product created Successfully\"}"
                    }
                }
            }
        },
        "/products/delete/{id}": {
            "delete": {
                "description": "Delete a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"\"product deleted successfully\"}"
                    },
                    "404": {
                        "description": "{\"error\": \"product does not exist\"}"
                    }
                }
            }
        },
        "/products/update/{id}": {
            "put": {
                "description": "Update an existing product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangedProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"product with id ${id} updated successfully\"}"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retrieve a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BaseProduct"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BaseProduct": {
            "description": "Represents a product in the inventory with all its details",
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "ChangedProduct": {
            "description": "Represents the details of a product to be changed in the inventory",
            "type": "object",
            "required": [
                "product"
            ],
            "properties": {
                "product": {
                    "$ref": "#/definitions/UpdateProduct"
                }
            }
        },
        "CreatedProduct": {
            "description": "Represents the details of a new product to be created in the inventory",
            "type": "object",
            "required": [
                "name",
                "sku"
            ],
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "Products": {
            "description": "Represents a list of new products to be created in the inventory",
            "type": "object",
            "required": [
                "products"
            ],
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreatedProduct"
                    }
                }
            }
        },
        "UpdateProduct": {
            "description": "Represents the details of a product that are to be updated in the inventory",
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Simple RESTful CRUD API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
